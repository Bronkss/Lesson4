"""
| Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества.
Затем пользователь вводит сами элементы множеств.
| 11 6
2 4 6 8 10 12 10 8 6 4 2
3 6 9 12 15 18
6 12 |
| --- | --- |



| Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены
только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и
нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
находясь перед некоторым кустом заданной во входном файле грядки.
| 4 -> 1 2 3 4
9 |
"""

# Task 22.

import random

user_list_one = [random.randint(0, 20) for _ in range(11)]
user_list_two = [random.randint(0, 20) for _ in range(6)]
print(user_list_one)
print(user_list_two)

result_list = []

for i in user_list_two:
    for j in user_list_one:
        if i == j:
            result_list.append(i)

print(f'Совпадения - {result_list}')


# Task 24

bushes_amt = [int(input("Введите количество черники в кусте: ")) for _ in range(int(input("Введите количество кустов: ")))]

result_sum_list = list()

for i in range(len(bushes_amt)):
    if i < len(bushes_amt) - 1:
        result_sum_list.append(bushes_amt[i] + bushes_amt[i + 1] + bushes_amt[i-1])
    else:
        result_sum_list.append(bushes_amt[i] + bushes_amt[i-1] + bushes_amt[0])

print(max(result_sum_list))

# Интересная вторая задача, немного ввела в ступор :) Но проработали работу по индексам)
